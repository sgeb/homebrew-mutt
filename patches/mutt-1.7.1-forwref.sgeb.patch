diff --git a/init.h b/init.h
index 6756004..2f97530 100644
--- a/init.h
+++ b/init.h
@@ -981,6 +981,13 @@ struct option_t MuttVars[] = {
   { "forw_quote",	DT_SYN,  R_NONE, UL "forward_quote", 0 },
   /*
   */
+  { "forward_references", DT_BOOL, R_NONE, OPTFORWREF, 0 },
+  /*
+  ** .pp
+  ** When \fIset\fP, forwarded messages set the ``In-Reply-To:'' and
+  ** ``References:'' headers in the same way as normal replies would. It
+  ** effectively includes forwarded messages as part of the original thread.
+  */
   { "from",		DT_ADDR, R_NONE, UL &From, UL 0 },
   /*
   ** .pp
diff --git a/mutt.h b/mutt.h
index b440a6b..27d2f02 100644
--- a/mutt.h
+++ b/mutt.h
@@ -399,6 +399,7 @@ enum
   OPTFORCENAME,
   OPTFORWDECODE,
   OPTFORWQUOTE,
+  OPTFORWREF,
 #ifdef USE_HCACHE
   OPTHCACHEVERIFY,
 #if defined(HAVE_QDBM) || defined(HAVE_TC) || defined(HAVE_KC)
diff --git a/send.c b/send.c
index d2a2491..bb468f7 100644
--- a/send.c
+++ b/send.c
@@ -810,7 +810,11 @@ envelope_defaults (ENVELOPE *env, CONTEXT *ctx, HEADER *cur, int flags)
     mutt_make_reference_headers (tag ? NULL : curenv, env, ctx);
   }
   else if (flags & SENDFORWARD)
+  {
     mutt_make_forward_subject (env, ctx, cur);
+    if (option (OPTFORWREF))
+      mutt_make_reference_headers (tag ? NULL : curenv, env, ctx);
+  }
 
   return (0);
 }
